{
  "pipeline-1748047052757": {
    "id": "pipeline-1748047052757",
    "name": "Vial Wash data to Excel",
    "description": "",
    "createdAt": "2025-05-24T00:37:32.757Z",
    "updatedAt": "2025-06-05T21:46:34.670Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "trigger-1748047056298",
          "type": "trigger",
          "position": {
            "x": -20.5,
            "y": -44.07697315692536
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "done",
            "uploadedFileNames": [
              "Overwrap data for Maive.pdf"
            ]
          },
          "width": 110,
          "height": 88,
          "selected": false,
          "positionAbsolute": {
            "x": -20.5,
            "y": -44.07697315692536
          },
          "dragging": false
        },
        {
          "id": "trigger-1748047059125",
          "type": "trigger",
          "position": {
            "x": -18.5,
            "y": 147.5
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "done",
            "uploadedFileNames": [
              "Vial Wash data for Maive.pdf"
            ]
          },
          "width": 110,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": -18.5,
            "y": 147.5
          },
          "dragging": false
        },
        {
          "id": "action-1748047062410",
          "type": "action",
          "position": {
            "x": 229.92302684307464,
            "y": -45.42302684307464
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "prompt": "Pull the following information from the form and input it in the Excel file.\nTime first operator went in.\nTime last operator came out.\nNumber of Overwraps / Item\nNumber of Overwrapped Components completed\nNumber of rejects\nPrimary Recipe Number\nNumber of plates used during primary OW\nSecondary Recipe Number\nNumber of plates used during secondary OW\nFrom this data, I want to see if it can determine the target # for overwrapped components. (# of OW completed + rejects)\n\nSometimes there may be a number in a table cell with a footnote added above and to the right of it. Consider this a demarcation for a footnote. It is not part of the number. For any time in / time out data points where you have multiple options to choose from, please select the earliest time for time in and latest time for time out.",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "outputTemplateUrl": "/templates/8556394b-86c2-4ceb-a323-561a4ebe2ba7-overwrap_template.csv",
            "outputTemplateName": "overwrap_template.csv",
            "runState": "done"
          },
          "width": 121,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": 229.92302684307464,
            "y": -45.42302684307464
          },
          "dragging": false
        },
        {
          "id": "action-1748047067946",
          "type": "action",
          "position": {
            "x": 231.5,
            "y": 148.5
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "prompt": "Pull the following data from Vial Washing batch record steps and input it in the Excel file.\nVial Configuration\nService Order\nNumber of vials processed per day\nNumber of vials rejected\nI also want it to calculate the vial reconciliation found on 14. To do that you need to calculate E which is A +B+C+D and then you need to read F. Finally calculate the vial reconciliation as E/F.\n",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "outputTemplateUrl": "/templates/73930083-608a-44ff-a55e-4113abd113e0-vial_template.csv",
            "outputTemplateName": "vial_template.csv",
            "runState": "done"
          },
          "width": 121,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": 231.5,
            "y": 148.5
          },
          "dragging": false
        },
        {
          "id": "output-1748047152444",
          "type": "output",
          "position": {
            "x": 535.6147334786485,
            "y": 36.532952738210156
          },
          "data": {
            "label": "Excel Export",
            "type": "excel",
            "fileName": "",
            "sheetNames": [
              "OW Data",
              "VW Data"
            ],
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "excel"
              }
            },
            "runState": "done",
            "fileUrl": "blob:http://localhost:3001/00e88ec8-4411-46b7-86a7-c1dfaa10c1e7",
            "outputFileName": "merged_output.xlsx"
          },
          "width": 118,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": 535.6147334786485,
            "y": 36.532952738210156
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "trigger-1748047056298",
          "sourceHandle": null,
          "target": "action-1748047062410",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748047056298-action-1748047062410"
        },
        {
          "source": "trigger-1748047059125",
          "sourceHandle": null,
          "target": "action-1748047067946",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748047059125-action-1748047067946"
        },
        {
          "source": "action-1748047062410",
          "sourceHandle": null,
          "target": "output-1748047152444",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748047062410-output-1748047152444"
        },
        {
          "source": "action-1748047067946",
          "sourceHandle": null,
          "target": "output-1748047152444",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748047067946-output-1748047152444"
        }
      ]
    }
  },
  "pipeline-1748590994781": {
    "id": "pipeline-1748590994781",
    "name": "SOP from Video",
    "description": "",
    "createdAt": "2025-05-30T07:43:14.781Z",
    "updatedAt": "2025-07-07T21:33:46.964Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "trigger-1748591004252",
          "type": "trigger",
          "position": {
            "x": -23.5,
            "y": 77
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "prompt",
            "uploadedFileNames": [
              "2025-02-05_15-19-57_421496_P-650-WTH-BKM-converted-moved.mp4"
            ]
          },
          "width": 192,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": -23.5,
            "y": 77
          },
          "dragging": false
        },
        {
          "id": "action-1748591006416",
          "type": "action",
          "position": {
            "x": 224.67999999999995,
            "y": 80.58000000000001
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "prompt": "Problem Statement:\nAnalyze the provided video and generate a sequential list of manufacturing assembly steps based solely on a visual analysis of the frames (incorporate any on-screen text if available). Create clear, user-centric instructions that enable a novice to replicate the process. For each step, follow these guidelines:\n•\tWrite the instruction in an imperative tone, starting with an action verb (e.g., ‘Align’, ‘Secure’, ‘Insert’).\n•\tEnsure that each step is detailed and logically sequenced.\n•\tInclude a timestamp field called t_end that indicates, in seconds from the start of the video, when the step is completed.\n•\tInclude a field called tools_used that lists the tools used in the step.",
            "useOutputTemplate": false,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "mp4"
                },
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "json"
              }
            },
            "outputTemplateUrl": "/data/P-650-WTH-BKM.json",
            "outputTemplateName": "P-650-WTH-BKM.json",
            "runState": "idle",
            "fileUrl": "blob:http://localhost:3001/b0338cc4-4eb7-4d6b-b83a-df442572ae9a",
            "outputFileName": "P-650-WTH-BKM.json"
          },
          "width": 114,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": 224.67999999999995,
            "y": 80.58000000000001
          },
          "dragging": false
        },
        {
          "id": "action-1748591017985",
          "type": "action",
          "position": {
            "x": 399.6122087458402,
            "y": 76.01555697412212
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "prompt": "Your job is to create a Standard Operating Procedure document for this Toothbrush holder manufacturing assembly process. You have been provided:\nA list of assembly steps and their description\n\nThe output should be a document for the standard operating procedure following the template provided.",
            "outputFileName": "output.md",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "json"
                }
              ],
              "outputType": {
                "type": "markdown"
              }
            },
            "runState": "idle",
            "outputTemplateUrl": "/templates/1c1c3dae-fc69-4642-a659-6fec1f2ea6af-SOP Template 09.15.2022 - on website.docx",
            "outputTemplateName": "SOP Template 09.15.2022 - on website.docx",
            "fileUrl": "blob:http://localhost:3001/73bfef77-0af9-4302-9d38-cbd085d2dfd9"
          },
          "width": 114,
          "height": 86,
          "selected": false,
          "positionAbsolute": {
            "x": 399.6122087458402,
            "y": 76.01555697412212
          },
          "dragging": false
        },
        {
          "id": "output-1748591025822",
          "type": "output",
          "position": {
            "x": 558.3999999999999,
            "y": 70.17337184719204
          },
          "data": {
            "label": "Doc Export",
            "type": "doc",
            "runState": "idle",
            "fileName": "Standard Operating Procedure_ Toothbrush Holder Assembly.docx",
            "ioConfig": {
              "inputTypes": [],
              "outputType": {
                "type": "doc"
              }
            },
            "fileUrl": "/static/Standard Operating Procedure_ Toothbrush Holder Assembly.docx",
            "outputFileName": "Standard Operating Procedure_ Toothbrush Holder Assembly.docx"
          },
          "width": 103,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": 558.3999999999999,
            "y": 70.17337184719204
          },
          "dragging": false
        },
        {
          "id": "trigger-1748591160735",
          "type": "trigger",
          "position": {
            "x": -17.919999999999987,
            "y": 211.76000000000005
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "idle",
            "uploadedFileNames": [
              "P650WTH-Specification.pdf"
            ]
          },
          "width": 192,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": -17.919999999999987,
            "y": 211.76000000000005
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "trigger-1748591004252",
          "sourceHandle": null,
          "target": "action-1748591006416",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748591004252-action-1748591006416"
        },
        {
          "source": "action-1748591006416",
          "sourceHandle": null,
          "target": "action-1748591017985",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748591006416-action-1748591017985"
        },
        {
          "source": "action-1748591017985",
          "sourceHandle": null,
          "target": "output-1748591025822",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748591017985-output-1748591025822"
        },
        {
          "source": "trigger-1748591160735",
          "sourceHandle": null,
          "target": "action-1748591006416",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748591160735-action-1748591006416"
        }
      ]
    }
  },
  "pipeline-1748049938228": {
    "id": "pipeline-1748049938228",
    "name": "Inspection Defects",
    "description": "",
    "createdAt": "2025-05-24T01:25:38.228Z",
    "updatedAt": "2025-05-30T18:42:54.429Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "action-1748050836118",
          "type": "action",
          "position": {
            "x": 454.33709869879715,
            "y": 248.81050638804635
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "outputTemplateUrl": "/templates/46146926-6a1a-4501-b79c-e1b8d6dd9426-Product C Inspection Template.csv",
            "outputTemplateName": "Product C Inspection Template.csv",
            "prompt": "Please read the inspection report and enter the data from the report into the output template. If a defect wasn't reported for a given column in the output template, then enter a zero (\"0\") for the entry under that column. Otherwise, please identify which defect to log based on the description in the document and log its quantity (Qty) associated with that defect into the spreadsheet.\n\nSome descriptions may occupy two rows. This is indicated by the data on one of its rows being marked with N/A or null data. Please don't delete any of the columns in the template. Please make sure that the total of the numbers in the Qty column in the document + the total quantity expected sum to the same sum of the data in the row entered into CSV's (excluding the lot number). Make sure every column in the row that's inserted has a value in it.",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "done"
          },
          "width": 116,
          "height": 88,
          "selected": false,
          "positionAbsolute": {
            "x": 454.33709869879715,
            "y": 248.81050638804635
          },
          "dragging": false
        },
        {
          "id": "output-1748050843259",
          "type": "output",
          "position": {
            "x": 725.7889979428732,
            "y": 248.82642293513214
          },
          "data": {
            "label": "Excel Export",
            "type": "excel",
            "fileName": "inspection_data.xlsx",
            "sheetNames": [
              "5 mL Reject Data"
            ],
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "excel"
              }
            },
            "runState": "done",
            "fileUrl": "blob:http://localhost:3000/5ead01ef-e0e7-4ba9-ad2b-2592fdd1e04c",
            "outputFileName": "inspection_data.xlsx"
          },
          "width": 115,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": 725.7889979428732,
            "y": 248.82642293513214
          },
          "dragging": false
        },
        {
          "id": "trigger-1748299658367",
          "type": "trigger",
          "position": {
            "x": 128.33066971114675,
            "y": 248.52138969783016
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "done",
            "uploadedFileNames": [
              "Product C Inspection Summary - dummy copy for Maive.pdf"
            ]
          },
          "width": 192,
          "height": 88,
          "selected": false,
          "positionAbsolute": {
            "x": 128.33066971114675,
            "y": 248.52138969783016
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "action-1748050836118",
          "sourceHandle": null,
          "target": "output-1748050843259",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748050836118-output-1748050843259",
          "selected": false
        },
        {
          "source": "trigger-1748299658367",
          "sourceHandle": null,
          "target": "action-1748050836118",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748299658367-action-1748050836118"
        }
      ]
    }
  },
  "pipeline-1748049938229": {
    "id": "pipeline-1748049938229",
    "name": "Overwrapping and Vial Washing",
    "description": "",
    "createdAt": "2025-05-24T01:25:38.229Z",
    "updatedAt": "2025-06-03T03:00:53.364Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "trigger-1748050647625",
          "type": "trigger",
          "position": {
            "x": -87,
            "y": -37.5
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "done",
            "uploadedFileNames": [
              "overwrap_data.pdf"
            ]
          },
          "width": 192,
          "height": 88,
          "selected": false,
          "positionAbsolute": {
            "x": -87,
            "y": -37.5
          },
          "dragging": false
        },
        {
          "id": "action-1748050649642",
          "type": "action",
          "position": {
            "x": 189.5,
            "y": -37.5
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "outputTemplateUrl": "/templates/839b1752-241b-4be8-909a-71b1374051b9-overwrap_template.csv",
            "outputTemplateName": "overwrap_template.csv",
            "prompt": "Pull the following information from the form and input it in the Excel file.\nTime first operator went in.\nTime last operator came out.\nNumber of Overwraps / Item\nNumber of Overwrapped Components completed\nNumber of rejects\nPrimary Recipe Number\nNumber of plates used during primary OW\nSecondary Recipe Number\nNumber of plates used during secondary OW\nFrom this data, I want to see if it can determine the target # for overwrapped components. (# of OW completed + rejects)\n\nSometimes there may be a number in a table cell with a footnote added above and to the right of it. Consider this a demarcation for a footnote. It is not part of the number. For any time in / time out data points where you have multiple options to choose from, please select the earliest time for time in and latest time for time out.",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "error"
          },
          "width": 114,
          "height": 86,
          "selected": false,
          "positionAbsolute": {
            "x": 189.5,
            "y": -37.5
          },
          "dragging": false
        },
        {
          "id": "output-1748050652265",
          "type": "output",
          "position": {
            "x": 448.4,
            "y": 58.5
          },
          "data": {
            "label": "Excel Export",
            "type": "excel",
            "fileName": "",
            "sheetNames": [
              "OW Data",
              "VW Data"
            ],
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "excel"
              }
            },
            "runState": "idle",
            "fileUrl": "blob:http://localhost:3000/c1dad12f-c9dc-43ac-9eec-31792175f4a7",
            "outputFileName": "merged_output.xlsx"
          },
          "width": 113,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": 448.4,
            "y": 58.5
          },
          "dragging": false
        },
        {
          "id": "action-1748050654987",
          "type": "action",
          "position": {
            "x": 193.5,
            "y": 169.5
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "outputTemplateUrl": "/templates/e3a99a62-f09d-4f86-a87a-5dd918daeffa-vial_template.csv",
            "outputTemplateName": "vial_template.csv",
            "prompt": "Pull the following data from Vial Washing batch record steps and input it in the Excel file.\nVial Configuration\nService Order\nNumber of vials processed per day\nNumber of vials rejected\nI also want it to calculate the vial reconciliation found on 14. To do that you need to calculate E which is A +B+C+D and then you need to read F. Finally calculate the vial reconciliation as E/F.",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "pdf"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "error"
          },
          "width": 114,
          "height": 86,
          "selected": false,
          "positionAbsolute": {
            "x": 193.5,
            "y": 169.5
          },
          "dragging": false
        },
        {
          "id": "trigger-1748050659461",
          "type": "trigger",
          "position": {
            "x": -84,
            "y": 170
          },
          "data": {
            "label": "File Upload",
            "type": "manual",
            "icon": {
              "type": {},
              "key": null,
              "props": {
                "className": "w-6 h-6"
              },
              "_owner": null,
              "_store": {}
            },
            "runState": "done",
            "uploadedFileNames": [
              "vial_washing_data.pdf"
            ]
          },
          "width": 192,
          "height": 88,
          "selected": true,
          "positionAbsolute": {
            "x": -84,
            "y": 170
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "trigger-1748050659461",
          "sourceHandle": null,
          "target": "action-1748050654987",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748050659461-action-1748050654987"
        },
        {
          "source": "action-1748050654987",
          "sourceHandle": null,
          "target": "output-1748050652265",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748050654987-output-1748050652265"
        },
        {
          "source": "action-1748050649642",
          "sourceHandle": null,
          "target": "output-1748050652265",
          "targetHandle": null,
          "id": "reactflow__edge-action-1748050649642-output-1748050652265"
        },
        {
          "source": "trigger-1748050647625",
          "sourceHandle": null,
          "target": "action-1748050649642",
          "targetHandle": null,
          "id": "reactflow__edge-trigger-1748050647625-action-1748050649642"
        }
      ]
    }
  },
  "pipeline-1748623301886": {
    "id": "pipeline-1748623301886",
    "name": "AI Operator Endpoint",
    "description": "",
    "createdAt": "2025-05-30T16:41:41.886Z",
    "updatedAt": "2025-06-04T17:35:35.089Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "httpTrigger-1748623480300",
          "type": "httpTrigger",
          "position": {
            "x": 5.5,
            "y": 69.5
          },
          "data": {
            "label": "HTTP Endpoint",
            "type": "http",
            "method": "GET",
            "endpoint": "/api/get/fan_temp",
            "runState": "done"
          },
          "width": 192,
          "height": 112,
          "selected": true,
          "positionAbsolute": {
            "x": 5.5,
            "y": 69.5
          },
          "dragging": false
        },
        {
          "id": "aiOperator-1748623488050",
          "type": "aiOperator",
          "position": {
            "x": 299.49706470178467,
            "y": 217.59316661167907
          },
          "data": {
            "label": "AI Operator",
            "type": "action",
            "prompt": "Please use Ignition, read the discharge temperature from the fan, and return it.",
            "runState": "done"
          },
          "width": 192,
          "height": 128,
          "selected": false,
          "positionAbsolute": {
            "x": 299.49706470178467,
            "y": 217.59316661167907
          },
          "dragging": false
        },
        {
          "id": "httpResponse-1748623496432",
          "type": "httpResponse",
          "position": {
            "x": 625.5963788850084,
            "y": 329.1513091535609
          },
          "data": {
            "label": "HTTP Response",
            "type": "http",
            "statusCode": 200,
            "contentType": "application/json",
            "runState": "idle"
          },
          "width": 146,
          "height": 110,
          "selected": false,
          "positionAbsolute": {
            "x": 625.5963788850084,
            "y": 329.1513091535609
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "httpTrigger-1748623480300",
          "sourceHandle": null,
          "target": "aiOperator-1748623488050",
          "targetHandle": null,
          "id": "reactflow__edge-httpTrigger-1748623480300-aiOperator-1748623488050"
        },
        {
          "source": "aiOperator-1748623488050",
          "sourceHandle": null,
          "target": "httpResponse-1748623496432",
          "targetHandle": null,
          "id": "reactflow__edge-aiOperator-1748623488050-httpResponse-1748623496432"
        }
      ]
    }
  },
  "pipeline-1748919214360": {
    "id": "pipeline-1748919214360",
    "name": "BOM Generation",
    "description": "",
    "createdAt": "2025-06-03T02:53:34.360Z",
    "updatedAt": "2025-06-30T17:42:35.846Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "action-1748919230696",
          "type": "action",
          "position": {
            "x": 171.4195810067468,
            "y": 97.77319044243694
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "prompt": "Please extract the bill of materials (BOM) and reformat it according to the attached CSV output template.\n\nAny or all of the items in the BOM may not contain the necessary data to fill in every column in the CSV template. That's ok. Please leave the data in that column blank for those items.",
            "outputFileName": "",
            "useOutputTemplate": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "txt"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "outputTemplateUrl": "/templates/9dbb4056-9df5-4efd-bc96-accb018034f5-bom-import-template.csv",
            "outputTemplateName": "bom-import-template.csv",
            "runState": "done"
          },
          "width": 119,
          "height": 86,
          "selected": false,
          "positionAbsolute": {
            "x": 171.4195810067468,
            "y": 97.77319044243694
          },
          "dragging": false
        },
        {
          "id": "integration-1749147713399",
          "type": "integration",
          "position": {
            "x": 590.03248086914,
            "y": 23.78324271364312
          },
          "data": {
            "label": "ERP",
            "type": "integration",
            "integrationType": "erp",
            "erpAction": "bom-lookup",
            "direction": "both",
            "runState": "idle",
            "file": {},
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            }
          },
          "width": 105,
          "height": 134,
          "selected": false,
          "positionAbsolute": {
            "x": 590.03248086914,
            "y": 23.78324271364312
          },
          "dragging": false
        },
        {
          "id": "integration-1749149343043",
          "type": "integration",
          "position": {
            "x": 1091.8978896924189,
            "y": 74.21672553957674
          },
          "data": {
            "label": "ERP",
            "type": "integration",
            "integrationType": "erp",
            "erpAction": "bom-generation",
            "direction": "both",
            "mockDistribution": {
              "directMatch": 80,
              "substitution": 10,
              "notFound": 10
            },
            "useMockData": true,
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "idle",
            "file": {}
          },
          "width": 126,
          "height": 134,
          "selected": true,
          "positionAbsolute": {
            "x": 1091.8978896924189,
            "y": 74.21672553957674
          },
          "dragging": false
        },
        {
          "id": "loop-1749182499752",
          "type": "loop",
          "position": {
            "x": 373.8247793682907,
            "y": 74.7710123077355
          },
          "data": {
            "label": "Loop",
            "type": "action",
            "runState": "idle",
            "file": {}
          },
          "width": 67,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": 373.8247793682907,
            "y": 74.7710123077355
          },
          "dragging": false
        },
        {
          "id": "action-1749231435617",
          "type": "action",
          "position": {
            "x": 826.6852827430206,
            "y": 82.00259715870328
          },
          "data": {
            "label": "CSV Append",
            "type": "action",
            "templateFileUrl": "",
            "templateFileName": "",
            "outputFileName": "merged_data.csv",
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "idle",
            "file": {}
          },
          "width": 118,
          "height": 86,
          "selected": false,
          "positionAbsolute": {
            "x": 826.6852827430206,
            "y": 82.00259715870328
          },
          "dragging": false
        },
        {
          "id": "trigger-1749242181242",
          "type": "trigger",
          "position": {
            "x": -26.098298484100383,
            "y": 112.44391103461518
          },
          "data": {
            "label": "Manual Upload",
            "type": "manual",
            "runState": "done",
            "file": {},
            "uploadedFileNames": [
              "space-delimited-bom.txt"
            ]
          },
          "width": 133,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": -26.098298484100383,
            "y": 112.44391103461518
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "loop-1749182499752",
          "sourceHandle": null,
          "target": "integration-1749147713399",
          "targetHandle": null,
          "id": "loop-1749182499752-integration-1749147713399"
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "integration-1749147713399",
          "sourceHandle": null,
          "target": "action-1749231435617",
          "targetHandle": null,
          "id": "integration-1749147713399-action-1749231435617"
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "action-1749231435617",
          "sourceHandle": null,
          "target": "integration-1749149343043",
          "targetHandle": null,
          "id": "action-1749231435617-integration-1749149343043",
          "selected": false
        },
        {
          "type": "feedback",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "action-1749231435617",
          "sourceHandle": "bottom",
          "target": "loop-1749182499752",
          "targetHandle": "bottom",
          "id": "action-1749231435617-loop-1749182499752",
          "selected": false
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "action-1748919230696",
          "sourceHandle": null,
          "target": "loop-1749182499752",
          "targetHandle": null,
          "id": "action-1748919230696-loop-1749182499752"
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "trigger-1749242181242",
          "sourceHandle": null,
          "target": "action-1748919230696",
          "targetHandle": null,
          "id": "trigger-1749242181242-action-1748919230696"
        }
      ]
    }
  },
  "pipeline-1749007485678": {
    "id": "pipeline-1749007485678",
    "name": "BOM to CSV with ERP Lookup",
    "description": "",
    "createdAt": "2025-06-04T03:24:45.678Z",
    "updatedAt": "2025-06-30T17:39:09.498Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "trigger-1749007497185",
          "type": "trigger",
          "position": {
            "x": -92.5,
            "y": 96.5
          },
          "data": {
            "label": "Manual Upload",
            "type": "manual"
          },
          "width": 133,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": -92.5,
            "y": 96.5
          },
          "dragging": false
        },
        {
          "id": "action-1749007503301",
          "type": "action",
          "position": {
            "x": 182.90654134399784,
            "y": 97.09345865600218
          },
          "data": {
            "label": "Structured Generation",
            "type": "action"
          },
          "width": 119,
          "height": 86,
          "selected": true,
          "positionAbsolute": {
            "x": 182.90654134399784,
            "y": 97.09345865600218
          },
          "dragging": false
        }
      ],
      "edges": []
    }
  },
  "pipeline-1751254994064": {
    "id": "pipeline-1751254994064",
    "name": "Untitled Pipeline",
    "description": "",
    "createdAt": "2025-06-30T03:43:14.064Z",
    "updatedAt": "2025-06-30T03:43:14.065Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [],
      "edges": []
    }
  },
  "pipeline-1751305377923": {
    "id": "pipeline-1751305377923",
    "name": "BOM Coding to CSV",
    "description": "",
    "createdAt": "2025-06-30T17:42:57.923Z",
    "updatedAt": "2025-07-11T05:36:21.849Z",
    "steps": [],
    "runs": [],
    "workflow": {
      "nodes": [
        {
          "id": "action-1751306973030",
          "type": "action",
          "position": {
            "x": 118.6469153642538,
            "y": 83.80742855457925
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "runState": "idle",
            "outputTemplateUrl": "/templates/5c79cadb-406b-456e-abf7-8d30cf475df4-BOM-template.csv",
            "outputTemplateName": "BOM-template.csv",
            "useOutputTemplate": true,
            "prompt": "Transform the provided manufacturing data according to the specified instructions. Your goal is to produce clean, structured, and analysis-ready output that correctly maps ambiguous or inconsistent inputs to their intended fields. Fill in the quantity field if it is not already filled in.",
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "csv"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "displayName": "BOM Reformatting",
            "files": [
              {}
            ],
            "file": {}
          },
          "width": 155,
          "height": 85,
          "selected": false,
          "positionAbsolute": {
            "x": 118.6469153642538,
            "y": 83.80742855457925
          },
          "dragging": false
        },
        {
          "id": "ai_web_search-1751308153360",
          "type": "ai_web_search",
          "position": {
            "x": 326.9395767298437,
            "y": 69.98445195069041
          },
          "data": {
            "label": "AI Web Search",
            "prompt": "Take the supplied input component in the BOM and search for the following information, as well as any potential substitutes.\n\n- Latest price\n- Quantity available\n- Estimated lead time\n- Any obsolescence notices",
            "websites": [
              "digikey",
              "mouser",
              "lcsc",
              "test"
            ],
            "runState": "idle",
            "files": [
              {}
            ],
            "fileUrl": "blob:http://localhost:3001/d9c66fa4-1516-419f-b953-78a440d5475a",
            "outputFileName": "enriched_bom.json",
            "file": {},
            "enrichedData": [
              {
                "RefDes": "R1 R2",
                "MPN": "CRG0603F10K",
                "Manufacturer": "TE Connectivity",
                "Qty": "2",
                "Description": "10k 0603 1% Resistor",
                "Notes": "",
                "nexarData": {
                  "mpn": "1622829-1",
                  "genericMpn": "1622829-",
                  "shortDescription": "Res Thick Film 0603 10K Ohm 1% 0.1W(1/10W) ±100ppm/C Pad SMD T/R",
                  "manufacturer": {
                    "name": "TE Connectivity"
                  },
                  "sellers": [
                    {
                      "company": {
                        "name": "Avnet"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=qVNMbMqhZRJC69x-IeE8MctYEBK5oFEUsO3PdJnP9kmlSLN182nP1Sg0yf0OEHQU3Peslno8mCNJePTnIwyh2l88EEDWKP_oQODtEMiyu9xF_yoGdRCzSYhMr6htYrOw6PT2_7IXb18CMx91DtVx1CugVAxftDbzDCZfraxyo5r2qWugvnxVypVYCowe7iijkRlCqd_oKgrwXNXT232_DiOVK2aqWHo8J-syhshGB4HPLdbC2jhOtBnhK__bSYvvANrmUIX6",
                          "inventoryLevel": 10000,
                          "prices": [
                            {
                              "price": 0.00283,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.00271,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.00265,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.00263,
                              "currency": "USD",
                              "quantity": 30000
                            },
                            {
                              "price": 0.00262,
                              "currency": "USD",
                              "quantity": 40000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=GSDkHbIkUQdca3e30X6gVPB7u6qVHq3q_SI8FE6GFQXtpYCbXPTAJ_RiTY6nNxKnxbnFMmKljDYmNuZgEweqEF9gToVP-4YxTr5R33-Az2VaBjPnODnrq8knel3Y9QIgNz3NQKLmf84SaKG8VCOxvxxNxjY9TBDiHE7kYEu88gUXXbMnfMr6V7g34blG5tuxeEPCPR6_dPbJskSmk0nze6MiQdyOzdssszKlHl4uxmkyeHNlx7ttcozn5WHcYI13iMQsW8Qg",
                          "inventoryLevel": 2980,
                          "prices": [
                            {
                              "price": 0.006,
                              "currency": "USD",
                              "quantity": 1
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "DigiKey"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=SQsBRFcIFotiF3F9pG5avcU-QkdWsWfB4IArbWLYle_lc1mK8JsFrWdnVVB6rZ4660GGnNMn426rnOze_9vRNLaYwCMAFV6kCOV2hv_xOsoKpM_yrbXN5DN0sNJ9L8cxp8iRdrtC2mURnoAn53-8Q_twlzjUY4GpPlrsvW2r3mveAd-ftzUAaB-k2TXhlLEPI9Cnpyn2BGseBZTWF7aKVhyoYBl3_ggB7nVIkFgZZVttMLqgDaaoeGksn_hO4tgxKDdW_l8",
                          "inventoryLevel": 925481,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.026,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.0126,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.00696,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.00571,
                              "currency": "USD",
                              "quantity": 2500
                            },
                            {
                              "price": 0.00499,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.00442,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.00415,
                              "currency": "USD",
                              "quantity": 15000
                            },
                            {
                              "price": 0.00385,
                              "currency": "USD",
                              "quantity": 25000
                            },
                            {
                              "price": 0.00368,
                              "currency": "USD",
                              "quantity": 35000
                            },
                            {
                              "price": 0.00352,
                              "currency": "USD",
                              "quantity": 50000
                            },
                            {
                              "price": 0.00318,
                              "currency": "USD",
                              "quantity": 125000
                            },
                            {
                              "price": 0.00299,
                              "currency": "USD",
                              "quantity": 250000
                            },
                            {
                              "price": 0.00283,
                              "currency": "USD",
                              "quantity": 500000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=H0tAyiEG2AaYvk8ZALCPIKdf8pVM_awk9XjUUjiBDohS5p5TaDOdy0S44c7wH5hT-migRVqmHfdLXJAFyeELhVmSMSy3TX4Wr10ZAEa96o2pDrLL2Px-0mTuEC0nuVYUfKZiD2QeuEcaKih_ovD3yGbv520c2UO1GOIqFfMHq8hRTiOuIzMVwtUcsUbdQIf6KjIwyGGnY5xmJumOf1rtjT_UPlAFz-XLxmDXctxB_plbtfllU3xpFCr_GcnRchE_5p8QIJ4",
                          "inventoryLevel": 941278,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.026,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.0126,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.00696,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.00571,
                              "currency": "USD",
                              "quantity": 2500
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=V5cE4QuVZDgmptbbqG0LLlTry2AsJ6TA2Al8N1sgIDWoeXz1aWCDgZ0BhlM6_yrSoIQUZyVhcpFWErhaIcQyPNplqjeVnFFZg-CSXuoiFCPxKJcyOg8L1fPMdzwmKoMYatna7c5l9ZXM92vH3TdeK1ItCxeQmB8iQxuzsOiJ54BkyhEECrfUUPRX0RFf_4ckkyp6oBOupLHuG-ooSP0-eU_KhS9XJPuiLxNtNLrBfX1jKEMPsW53TyW6hlrfMjkW2PKstsU",
                          "inventoryLevel": 940000,
                          "prices": [
                            {
                              "price": 0.00499,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.00442,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.00415,
                              "currency": "USD",
                              "quantity": 15000
                            },
                            {
                              "price": 0.00385,
                              "currency": "USD",
                              "quantity": 25000
                            },
                            {
                              "price": 0.00368,
                              "currency": "USD",
                              "quantity": 35000
                            },
                            {
                              "price": 0.00352,
                              "currency": "USD",
                              "quantity": 50000
                            },
                            {
                              "price": 0.00318,
                              "currency": "USD",
                              "quantity": 125000
                            },
                            {
                              "price": 0.00299,
                              "currency": "USD",
                              "quantity": 250000
                            },
                            {
                              "price": 0.00283,
                              "currency": "USD",
                              "quantity": 500000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Mouser"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=nHJksqJxdHyySyNUccxQN3aiX9_IBe93R8oWhw-FhVVLoW2kQcGwZ11tJs0R75RBqDyfaMPLu6z-k8hft_yoIpbDT_Wx2GRtqUs5MdtLbmclVF9Rk1CuPluUO4ovATXJ7Vcqmca7pb4EfJZpwlTJXU0s9Sn2JA2841xENedCnVgFpB2orjjE4hNwbtMG22qVHVKFKrVLd4gV3ptzx3wwJYn0OtZwxI6HJcLQHxRHuQTcRGOCtnHut4fMnVkgJNmRODngEb4j",
                          "inventoryLevel": 186127,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.02,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.02,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.011,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.008,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.006,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.004,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.004,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.003,
                              "currency": "USD",
                              "quantity": 50000
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "RefDes": "C1",
                "MPN": "C0805C103K1RACTU",
                "Manufacturer": "KEMET",
                "Qty": "1",
                "Description": "10nF 50V X7R",
                "Notes": "",
                "nexarData": {
                  "mpn": "C0805C103K1RACTU",
                  "genericMpn": "C0805",
                  "shortDescription": "Multilayer Ceramic Capacitors MLCC - SMD/SMT 100V 0.01uF X7R 0805 10%",
                  "manufacturer": {
                    "name": "KEMET"
                  },
                  "sellers": [
                    {
                      "company": {
                        "name": "Mouser"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=uWLVmg2NPfCtdpRqbtBz6Rdf_WRGvrghjEs4RdRzv24CYQcC5xQUicM2yEKuF562jZQG4yivL2fDTVbEFriTRIc53pP8AGCS2FoRcOme3kcEdus5nGkLcorP3QkZwIsD2DQyV3GovwHHXhTdbU73KcNmSBHXUHUo7VEV3faoVTBjKCbAXAKRS7iKc774GYg5deOzPAKsByGs4sXlVCSgFs5ALh6TToUrSrsjbFRzoXSmMp_L1bJ0F-_fQyA7pjJKYA",
                          "inventoryLevel": 154824,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.034,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.034,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.02,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.016,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.01,
                              "currency": "USD",
                              "quantity": 4000
                            },
                            {
                              "price": 0.009,
                              "currency": "USD",
                              "quantity": 8000
                            },
                            {
                              "price": 0.009,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.008,
                              "currency": "USD",
                              "quantity": 24000
                            },
                            {
                              "price": 0.007,
                              "currency": "USD",
                              "quantity": 48000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "DigiKey"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=dRj1mJKau3tiWFAQc-S-eTSVgRVK9nY3_oQjWw0Js9ICuXSCuZwcXFkGArgSJeYpptCzanH6Dci4DserofHHetQHVyXCz8yR37GC7qesLxmu02R06Rlm44z5apdf-IdvWwWJEQ98pMPwpN13ItVxWfNdXj2LZdVQ9X0I39scMXqH7NlVCCskOms89OGyPaz-5PhG4lE4NqBUe9aYw8PXPvbVC1PrxkH-w4WmQmLJI4Un2BX1mEqISDJiG2-3kAEvIcU",
                          "inventoryLevel": 149716,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.041,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.0239,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.01522,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.01096,
                              "currency": "USD",
                              "quantity": 4000
                            },
                            {
                              "price": 0.00976,
                              "currency": "USD",
                              "quantity": 8000
                            },
                            {
                              "price": 0.00916,
                              "currency": "USD",
                              "quantity": 12000
                            },
                            {
                              "price": 0.00909,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.008,
                              "currency": "USD",
                              "quantity": 28000
                            },
                            {
                              "price": 0.00796,
                              "currency": "USD",
                              "quantity": 40000
                            },
                            {
                              "price": 0.00736,
                              "currency": "USD",
                              "quantity": 100000
                            },
                            {
                              "price": 0.00731,
                              "currency": "USD",
                              "quantity": 200000
                            },
                            {
                              "price": 0.00727,
                              "currency": "USD",
                              "quantity": 400000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=BD_J8oP6uh60YFGe5_5a4cwMjDM2dJEYKbbWFtmxM3TiiLccIQ6dzipvCelQdh9CHAHB9vCunWPdbP0u2yRBOWqUT_18AwVUN6mIXevrmQEnr19oW7GLvGanevceWMKsFICTz0OPbnmTdJLEIDW-Q3swsBwH7eYJvkce2sDIhPs1aikEW2VfBmJ9p3onts_FbPUUAK3WuYkp6g7bK13ecE-KAYfb7EabXqz4sGLqWebIhzYSB9mtBNW0y_q0bBDAzX0",
                          "inventoryLevel": 163478,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.041,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.0239,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.01522,
                              "currency": "USD",
                              "quantity": 1000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=KW8vhF0bDXKtuTzC2QrkTUla5B3QkygA8NfwSKwyT9jqUFRRfVER0bT_hmOmeA-NaKeUOl3_WhgIGQF41wxdxctWxfdzXUwFhueNnI8hbhrPl7ffsHEBMBfdO5zo1hOyKWGscgRSCTiv4jKpUyba49bHbMcnQKi3d40HMU1vOaX7nlWGdH1e1ytlYVejAblQ1mrf3_6cV2KYjD8YPcDyTiJb9EZqLyp404bhZMp6gHD9tgw_DuhInC1k3Qs2o1UWIhE",
                          "inventoryLevel": 163000,
                          "prices": [
                            {
                              "price": 0.01096,
                              "currency": "USD",
                              "quantity": 4000
                            },
                            {
                              "price": 0.00976,
                              "currency": "USD",
                              "quantity": 8000
                            },
                            {
                              "price": 0.00916,
                              "currency": "USD",
                              "quantity": 12000
                            },
                            {
                              "price": 0.00909,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.008,
                              "currency": "USD",
                              "quantity": 28000
                            },
                            {
                              "price": 0.00796,
                              "currency": "USD",
                              "quantity": 40000
                            },
                            {
                              "price": 0.00736,
                              "currency": "USD",
                              "quantity": 100000
                            },
                            {
                              "price": 0.00731,
                              "currency": "USD",
                              "quantity": 200000
                            },
                            {
                              "price": 0.00727,
                              "currency": "USD",
                              "quantity": 400000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Avnet"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=hlnUsascOTRDiFpE4w6D9AUdifaDstXElbhS1OQrrrEkWqzxUHmpd4VpKwRqX-vW2AocNR_bJKl1OL3S_9T06wOibT6Bh4Pe6eFsS1PKki8XNum1ODhs8CkvnhzkcSuUvr2ur4goHtL2gAnUYC0scu9copQYUJsld7ALUBLNZpVFpxQg_t8e0uQ5tzTycHy8K9HtljBg7YNgoE8CkVf2D8jEcoMbvUviYAs6pQIMEbHi0Q2XxzaofMuBt1IToGeWTws",
                          "inventoryLevel": 8060000,
                          "prices": [
                            {
                              "price": 0.00583,
                              "currency": "USD",
                              "quantity": 4000
                            },
                            {
                              "price": 0.00573,
                              "currency": "USD",
                              "quantity": 8000
                            },
                            {
                              "price": 0.00564,
                              "currency": "USD",
                              "quantity": 16000
                            },
                            {
                              "price": 0.00554,
                              "currency": "USD",
                              "quantity": 24000
                            },
                            {
                              "price": 0.00544,
                              "currency": "USD",
                              "quantity": 32000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=1O7-nv4SvQT7t6CosPpzMTrhXfd0myYqHXmjibNKBB5d2bVmn74E6eDfBWHLh9Zj6oMYw3_XrQLpkDDG14Cq3e7JDploc3itwZ9_AKS5EHmV-bMw4GoX5GJEx7Btj3qdYjDuf9cFykQld7K30IJRHNSIMa6K2CHOMrUzk9iHy9VHeDOVYcQ5QKKNpBAVQvJCStzpYJ53pZcbC1TYNh0lgUDZYlPwm6jXCr8nK4o_Ko1mehFKkJNovt5tR-gHGoo5ww8",
                          "inventoryLevel": 16000,
                          "prices": []
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=GOxDdCibtyL3U9s5tvs714RRLc_lF3w6IyeIo3VZJGwsRR5AwhuhSsqRxGZEYHTrF6axDiWYJN9zT9I--kvi5JIp5yJLo4HPNlZIfNV4vpKbN1xAcydlGHR216eYnlM1Zkzkl1WTT-WwJ_2tsQg4_RRTLwdnYbuBllt3ReqOFId4MZcZV8bpQdlMhVQ6cZE9xCkl_hqgWRjReGRrCURgWpbEqNYsA_jp1NuVZEZwEabvkcvuQW72LIY5p8ovgo1d2lA",
                          "inventoryLevel": 4522,
                          "prices": [
                            {
                              "price": 0.126,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.041,
                              "currency": "USD",
                              "quantity": 25
                            },
                            {
                              "price": 0.036,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.03,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.027,
                              "currency": "USD",
                              "quantity": 250
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "RefDes": "U1",
                "MPN": "AS1115-BSST",
                "Manufacturer": "",
                "Qty": "1",
                "Description": "LED Driver",
                "Notes": "24-QSOP",
                "nexarData": {
                  "mpn": "AS1115-BSST",
                  "genericMpn": "AS1115",
                  "shortDescription": "AS Series 5.5 V 3.4 MHz SMT I2C Interfaced LED Driver with Keyscan - QSOP-24",
                  "manufacturer": {
                    "name": "Osram"
                  },
                  "sellers": [
                    {
                      "company": {
                        "name": "DigiKey"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=6g6LZRvGsHkaWImQcXsALt5JSgJLAzpKpmxeoKv6fu1nCzmTU_uEWnt5sMI2lnRVewP3PRN7DsDLu9WlfMzZnOTG_mPwRB6TEwGTgnOMov0HXijxpATtFN6-HxbB1sjqBG3E0q55jBUa_u6q3HqpvuzVUkHMUDeqKUBEJQcZC3up-Mjb9-ONuDwh4jZesmash_sX_X5RW5xIzYG07k_PdyCunq3DRWiULplTcXr4cjudnBIGpa_a91FOtwsIV7qxVCAMrKBi",
                          "inventoryLevel": 20198,
                          "prices": [
                            {
                              "price": 2.91,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 2.176,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 1.9924,
                              "currency": "USD",
                              "quantity": 25
                            },
                            {
                              "price": 1.7901,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 1.6938,
                              "currency": "USD",
                              "quantity": 250
                            },
                            {
                              "price": 1.63574,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 1.58793,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 1.53748,
                              "currency": "USD",
                              "quantity": 2500
                            },
                            {
                              "price": 1.50707,
                              "currency": "USD",
                              "quantity": 5000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=cX7IEwOhWykpWN0c-VTL9aXOl4etqDd1tzHT324iXkm-IC-LAMKkmU9m4TAoKcugs-9DYHdiWYjLdGRIN-PYSIpznlzquIctR-J2tQiakT5bR59pSmMFAJ-uOFGPcw3rz6NYyoPno2MEKHqL29EZKWPjZE-7bcfSmymBjaL4kX6HC5lLCnJK2dVD60Qc8Wqc_oiOU0wrmymJdVGt7qF5f0o9bHINpDKRYgwrT7-T9c_H4H7WBf8hV_zrZpRm49CEchDsEgMy",
                          "inventoryLevel": 6690,
                          "prices": [
                            {
                              "price": 2.91,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 2.176,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 1.9924,
                              "currency": "USD",
                              "quantity": 25
                            },
                            {
                              "price": 1.7901,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 1.6938,
                              "currency": "USD",
                              "quantity": 250
                            },
                            {
                              "price": 1.63574,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 1.58793,
                              "currency": "USD",
                              "quantity": 1000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=1yiFqxkrDxyLaMna1IsnKpKeZZgCyix0ZYjkzNOLW_adEGNdvA_b41VgSkPHDXhtQjYQUei0ZLUiy6QLgTsjzq0MlJOOLVuOBcqqICWqPxVRtV4ZbF4thr8cft91nZl4Qdu_-HkT3VcMQxh-H3IA9ro6xyj0-HTKAKCrdorLuFphd0CTD5ad9oaimTCPUvEEB-AzuuDNMb-CwwqPi5oYrs_IedxvgkNfRw1mOnGy44Jg7Dlyryrw0gduFTTPvyIw1tOFIEo2",
                          "inventoryLevel": 5000,
                          "prices": [
                            {
                              "price": 1.53748,
                              "currency": "USD",
                              "quantity": 2500
                            },
                            {
                              "price": 1.50707,
                              "currency": "USD",
                              "quantity": 5000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Avnet"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=nVAgbp6DW1BGOVurHFPTI9oR5O6tdtfR_XSAGXcIhkygPNPI-TQfbFdbK4UY8HhOuvrYNuT5F58uIo6XNbHtHUl5x2A7QtG6lg0KIuACumUJPoqJBgf8ZhjbU08I7o5jLU50yT-zfu7fDTIUaxsgOlyJXTr4pWYiaMPXXvAxyeySZUBjxCVOt7FYPYp8S97bNAhJp6QAi6r-i6H1fdh0WyiB0gLkMp1vuHDk6oVxulMCuGlWW41h_fyZg2an-munF0-Vx7h-Hw",
                          "inventoryLevel": 25000,
                          "prices": [
                            {
                              "price": 1.56577,
                              "currency": "USD",
                              "quantity": 2500
                            },
                            {
                              "price": 1.49669,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 1.44362,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 1.38469,
                              "currency": "USD",
                              "quantity": 15000
                            },
                            {
                              "price": 1.357,
                              "currency": "USD",
                              "quantity": 20000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Mouser"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=z05I7RscAE6KIivtpXcF5jj-LQ5ww2B3w-Gh3CIpqWfGfiFan_aGBSUFMGLFb26_rBe3fMNqT1K8UdJe7aYNy1HXrMHr0be-PbYK9-XsAWufREie_YRcwGReLbGt8E3757G-mGck5JBpgKWGWHjarEH0FdD1BpGTegiaDFY57Px-pk9V1XyNt2Nx3s9dvNeNU_8jXrFmEQd66VtQ8ZxaIjmjqlOKFdTht2bOjCR7VMtNL02Wyl8kYdfIhgN8DFJLTtB68SPFXg",
                          "inventoryLevel": 3891,
                          "prices": [
                            {
                              "price": 2.91,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 2.18,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 2,
                              "currency": "USD",
                              "quantity": 25
                            },
                            {
                              "price": 2,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 1.8,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 1.69,
                              "currency": "USD",
                              "quantity": 250
                            },
                            {
                              "price": 1.59,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 1.54,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 1.53,
                              "currency": "USD",
                              "quantity": 2500
                            },
                            {
                              "price": 1.5,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 1.5,
                              "currency": "USD",
                              "quantity": 10000
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "RefDes": "D1",
                "MPN": "1N4148-T",
                "Manufacturer": "Diodes Inc",
                "Qty": "1",
                "Description": "Diode",
                "Notes": "“Switching”, fast",
                "nexarData": {
                  "mpn": "1N4148TR",
                  "genericMpn": "1N4148",
                  "shortDescription": "Diode, Rectifier, Standard, Vr 75V, If 300mA, Pkg DO-35, Vf 1000mV, Trr 8ns, Cj 4pF",
                  "manufacturer": {
                    "name": "Vishay"
                  },
                  "sellers": [
                    {
                      "company": {
                        "name": "Avnet"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=ZtxokbuP716d1RHBsSbasqk5jkqTCbAdCjGKIXToL5O96H_LuwHQ_G-7YR9-DcTR41t1b7by7QIoTAX5bkGbFh0riVhr7fNEHKLaJw-jDwwulD3Qlron1mZaRPr2Bp1IMucuFgFi7RA2QZORN0q6AoOYLux7EWTgeFBHBeeBKW1c1Zq3ljb88RvsAuLp5NcRrBmQK64MuooEnYkRh9JhXjNIR1oCxBfCZ6hzf32dG_URpm6d7AmFMbH7_3glPw9nTQ",
                          "inventoryLevel": 250000,
                          "prices": [
                            {
                              "price": 0.0141,
                              "currency": "USD",
                              "quantity": 50000
                            },
                            {
                              "price": 0.01398,
                              "currency": "USD",
                              "quantity": 100000
                            },
                            {
                              "price": 0.01374,
                              "currency": "USD",
                              "quantity": 200000
                            },
                            {
                              "price": 0.0135,
                              "currency": "USD",
                              "quantity": 300000
                            },
                            {
                              "price": 0.01326,
                              "currency": "USD",
                              "quantity": 400000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=PlcZBIe0W0BBWZR7N3m5nhXOoNgTJws3j0lejZEgAoH1bnvm4Zs9rPqiZ9Kck3IqY7M_7x0Xixmc0z44l4Pa-K2VIUyHAlTyICCfZjDiCiHhX3XO6ffILk3fFwP0EDl3HQ4eVen6IizZfDSS0tgqrFTbFUi5PjvzeqQX6yqq7HCBj-Frnh4PvvF8aNhqmY74vU9ivsxAoUt7BlUldciiBo-WMkyJJOpVhHKHhBgV8-cal7HBRMzpLTw9FD0NUg",
                          "inventoryLevel": 25873,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.071,
                              "currency": "USD",
                              "quantity": 25
                            },
                            {
                              "price": 0.036,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.034,
                              "currency": "USD",
                              "quantity": 250
                            },
                            {
                              "price": 0.031,
                              "currency": "USD",
                              "quantity": 500
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Mouser"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=6JdKEMMgyZQtqk_mlsvADP78KETuXPl8dQDIUU5JChGNoKSyIe4S6zlBwR3My_9GkeUEvThs4shFyw_do7Jgi8WE7ToIyIPSOfeyF_dwC567GFEwnC9Y89aEHI2cjVzKbztbOQfTt9uVrlbAu5FuNx31NHw5dhhB_xDocYthaguexCHd1vUhd_xrN2jvaATXk3wC0esMKRjP-bzkuOuNfjlWa0mAoQmJyIQ5AS5YHc8G11mT_L0Rb9RfvC5raYtT",
                          "inventoryLevel": 133508,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.068,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.068,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.056,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.041,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.032,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.026,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.023,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.022,
                              "currency": "USD",
                              "quantity": 25000
                            },
                            {
                              "price": 0.022,
                              "currency": "USD",
                              "quantity": 50000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "DigiKey"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=qSjmPegWRx2kBcy6fnjC6Zw_bC8A3YWyQXej5t7Lqy0Nat7l-trkDOYgdeDI7J1i8vpSA0520lq9JzqNqeRVYK7cyLWRsuJcauhCZlaMKLNjgcJbAugYNvjnjhKxN785wjlJN1HaL3UKe_n7h5ONR-TyDm4vLSYmgcRZNcztDQDf3OcYHDNq1clAzIzchlO4izVB0PAMg8adALGILFVuOt2bfh1gSy8SYDpZ0NQh-_exuCSF0Aku6blpOYUZJt0",
                          "inventoryLevel": 176623,
                          "prices": [
                            {
                              "price": 0.1,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.068,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.0551,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.04008,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.03414,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.03157,
                              "currency": "USD",
                              "quantity": 2000
                            },
                            {
                              "price": 0.02581,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.02533,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.02278,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.02149,
                              "currency": "USD",
                              "quantity": 30000
                            },
                            {
                              "price": 0.01991,
                              "currency": "USD",
                              "quantity": 50000
                            },
                            {
                              "price": 0.01916,
                              "currency": "USD",
                              "quantity": 70000
                            },
                            {
                              "price": 0.01832,
                              "currency": "USD",
                              "quantity": 100000
                            },
                            {
                              "price": 0.01648,
                              "currency": "USD",
                              "quantity": 250000
                            },
                            {
                              "price": 0.01534,
                              "currency": "USD",
                              "quantity": 500000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=FnDeM_KtJA9M1BwrQ2ZtSrpX2qLBRdIKf5I4p631yRZKxGajRwYNhnBV5oUmZ5-58WW0A6fn-fEtl-avAgFqQYnfaduVW_c9DcQJP6ST6wdf9jY5DZ-VxxzDMSU3mNKkMACAiR577GsVqYDztlJe8lFttyMJTd-54IkHaYFfQizOwlN3fr48E-dVSM_iZZodIvfJJ2aNAnkBMRBIJUHCH1hQmdN17dZZKyYoeKx5cZFWagLKDCtjs9LQqise",
                          "inventoryLevel": 170001,
                          "prices": [
                            {
                              "price": 0.02533,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.02278,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.02149,
                              "currency": "USD",
                              "quantity": 30000
                            },
                            {
                              "price": 0.01991,
                              "currency": "USD",
                              "quantity": 50000
                            },
                            {
                              "price": 0.01916,
                              "currency": "USD",
                              "quantity": 70000
                            },
                            {
                              "price": 0.01832,
                              "currency": "USD",
                              "quantity": 100000
                            },
                            {
                              "price": 0.01648,
                              "currency": "USD",
                              "quantity": 250000
                            },
                            {
                              "price": 0.01534,
                              "currency": "USD",
                              "quantity": 500000
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "RefDes": "R3",
                "MPN": "",
                "Manufacturer": "",
                "Qty": "1",
                "Description": "1kΩ 0603",
                "Notes": "No PN provided",
                "nexarData": {
                  "mpn": "ERA3ARW102V",
                  "genericMpn": "ERA3",
                  "shortDescription": "Res Thin Film 0603 1K Ohm 0.05% 0.1W ±10ppm/°C Molded SMD Punched Carrier T/R",
                  "manufacturer": {
                    "name": "Panasonic"
                  },
                  "sellers": [
                    {
                      "company": {
                        "name": "Mouser"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=YT5oqcjVzTx93kcJfyqrDdR5tHRNVdX-2_enarokl9zZ13oDzcvBLTq4zuxh356j00_wq0Z5mjPO19XyjKOQV2bdA3Ly4r58Px0w70TNcbCnGe7EgQYdn8oFsxU7IO3v8dcFGsZMOyuR0fXNptBDOzYSTAYFg-wK-OjfwH0CUeaLEcVFSHuYvdf8hpR8xQwSjqmT-7m2KVZ1_ycjYpztsjErHz-9_A7WdthA91R3mRSXm2kCesfODFwvlIWe3v7-XEcqjg",
                          "inventoryLevel": 28728,
                          "prices": [
                            {
                              "price": 0.47,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.394,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.345,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.314,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.262,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.231,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.213,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.213,
                              "currency": "USD",
                              "quantity": 10000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "DigiKey"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=KVwseo13z-qy19kdf0iotGiLV89OOxvWXlx4QBMBsXltbwcl7rXYhzvtQmbW8LlLqk6Cl8XhCV4NorJQLhEgVYBSIzZUwhv7TMK-V-gXn0RbsbgciUgAsZvmJeiIQAJeRKmNIBHiZIqPf6UbR5CT4j4PgOwKFinqc9aZQmzcXX41DBs_UBheQL8NjDP6hL7BQ1d-6J51yanZTDG8c-qeG1jh5kcdjR5K1cipctbFjSdUKu4-aUjSh8QEOfWgCoBXtPiS",
                          "inventoryLevel": 22804,
                          "prices": [
                            {
                              "price": 0.44,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.368,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.3226,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.305,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.26974,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.2461,
                              "currency": "USD",
                              "quantity": 1000
                            },
                            {
                              "price": 0.22297,
                              "currency": "USD",
                              "quantity": 5000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=Xkn-BEMv9d4aENq4QjkuSdAGaJIGHUp8ilpTLAXeB8IXctfxb3td2eJpUNGlXvrUi3RsJLeqbB7QAycfCpq2dlGtkOD-wFPJxbzWLFb0aU41F72012wMy7g_kiG4cKYxhf-1hinUwYQeeefCbYc9KAHRRpSJYi78yowu1yXZlUyw0OcBGt2dL3SwsJCYyTvtmaWSiEdhTDdvBjil--FSSwn6RISl15XlyiM1bO2iSpeBFutaj7PR_gHTv73TfXrZ2HCS",
                          "inventoryLevel": 18509,
                          "prices": [
                            {
                              "price": 0.44,
                              "currency": "USD",
                              "quantity": 1
                            },
                            {
                              "price": 0.368,
                              "currency": "USD",
                              "quantity": 10
                            },
                            {
                              "price": 0.3226,
                              "currency": "USD",
                              "quantity": 50
                            },
                            {
                              "price": 0.305,
                              "currency": "USD",
                              "quantity": 100
                            },
                            {
                              "price": 0.26974,
                              "currency": "USD",
                              "quantity": 500
                            },
                            {
                              "price": 0.2461,
                              "currency": "USD",
                              "quantity": 1000
                            }
                          ]
                        },
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=bQ6Jm6e8U-gAbZD4lQdHlCDT3xZUirIccQS55ZPGoIZUx6hYGPBGiEzJpZIEVlJWFEYw4aCKfl555AyAk8nAY3ly0Sblp4B6DRyjSSNUaHFqjv8N1DAKgrfxxE16N4YerwuC_ylzNZ_UfI-251Q6sjmB-ECc7FsjxucYl1w8Nws_5k5AUwXUJjvnh2grVJl2IR3bNexDlk3lbkaRNKnP3eBA6lkIRVRpneevNUW1AIvvo7OciMW32LoUXQqpsTMWqykU",
                          "inventoryLevel": 15000,
                          "prices": [
                            {
                              "price": 0.22297,
                              "currency": "USD",
                              "quantity": 5000
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "company": {
                        "name": "Avnet"
                      },
                      "offers": [
                        {
                          "clickUrl": "https://octopart.com/opatz8j6/a1?t=S5KXJyc0OAmkSTYj43KrYu0MXVAh2uko1unFrDVPGXyTfZk1Ev5_Xm-o538iJI_LlvLTBfMmrRB5Ca2A6QNexRq13gLB9volmCQoKAiyXAl0RTBvG6hhBcz_FrHL9wYcfUQ8No2oucXmeMiYzuKxKGhEhPZKGpFpeCrk0wfuX4ul2HzDoo1eJIr91EiLXho8ApzGmXHspioaCGBrNbPe4utN0qM9dyV0R00xrmKOmbVJnB7l0a_Ucp8-AC_Yh1yFEQjurBgC",
                          "inventoryLevel": 0,
                          "prices": [
                            {
                              "price": 0.22304,
                              "currency": "USD",
                              "quantity": 5000
                            },
                            {
                              "price": 0.21964,
                              "currency": "USD",
                              "quantity": 10000
                            },
                            {
                              "price": 0.21624,
                              "currency": "USD",
                              "quantity": 20000
                            },
                            {
                              "price": 0.2125,
                              "currency": "USD",
                              "quantity": 30000
                            },
                            {
                              "price": 0.2091,
                              "currency": "USD",
                              "quantity": 40000
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "approvedSuppliers": [
              "DigiKey",
              "Mouser",
              "Arrow",
              "Avnet"
            ]
          },
          "width": 160,
          "height": 112,
          "selected": false,
          "positionAbsolute": {
            "x": 326.9395767298437,
            "y": 69.98445195069041
          },
          "dragging": false
        },
        {
          "id": "trigger-1751313521051",
          "type": "trigger",
          "position": {
            "x": -54.40382228615482,
            "y": 83.94335721097875
          },
          "data": {
            "label": "Manual Upload",
            "type": "manual",
            "runState": "idle",
            "displayName": "BOM Upload",
            "uploadedFileNames": [
              "BOM messy.csv"
            ]
          },
          "width": 116,
          "height": 85,
          "selected": false,
          "positionAbsolute": {
            "x": -54.40382228615482,
            "y": 83.94335721097875
          },
          "dragging": false
        },
        {
          "id": "action-1751334092984",
          "type": "action",
          "position": {
            "x": 535.59608150724,
            "y": 83.50211606067288
          },
          "data": {
            "label": "Structured Generation",
            "type": "action",
            "prompt": "Please analyze the passed BOM components and their quotes. Please output a CSV file with the recommended quote (in unit pricing). You will see the quotes nested under each component. Tell me your reasoning behind the optimization in the debug section. Optimize the quote based on:\n\n1. Price\n2. Inventory Level\n\nThe customer wants to place an order for 2000 of these BOMs. Based the price optimization off of that.",
            "useOutputTemplate": true,
            "outputTemplateName": "BOM-final-template.csv",
            "outputTemplateUrl": "/templates/95539ed7-1c0e-47ec-879c-46e95f48e3c8-BOM-final-template.csv",
            "ioConfig": {
              "inputTypes": [
                {
                  "type": "json"
                }
              ],
              "outputType": {
                "type": "csv"
              }
            },
            "runState": "idle",
            "displayName": "BOM Optimization",
            "files": [
              {}
            ],
            "file": {}
          },
          "width": 153,
          "height": 85,
          "selected": true,
          "positionAbsolute": {
            "x": 535.59608150724,
            "y": 83.50211606067288
          },
          "dragging": false
        },
        {
          "id": "output-1752207809627",
          "type": "output",
          "position": {
            "x": 756.5470863192604,
            "y": 83.05684938530939
          },
          "data": {
            "label": "File Download",
            "type": "file_download",
            "runState": "idle",
            "file": {},
            "outputFileName": "bom 0.csv"
          },
          "width": 126,
          "height": 85,
          "selected": false,
          "positionAbsolute": {
            "x": 756.5470863192604,
            "y": 83.05684938530939
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "trigger-1751313521051",
          "sourceHandle": null,
          "target": "action-1751306973030",
          "targetHandle": null,
          "id": "trigger-1751313521051-action-1751306973030"
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "action-1751306973030",
          "sourceHandle": null,
          "target": "ai_web_search-1751308153360",
          "targetHandle": null,
          "id": "action-1751306973030-ai_web_search-1751308153360"
        },
        {
          "type": "step",
          "style": {
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "ai_web_search-1751308153360",
          "sourceHandle": null,
          "target": "action-1751334092984",
          "targetHandle": null,
          "id": "ai_web_search-1751308153360-action-1751334092984"
        },
        {
          "type": "step",
          "animated": true,
          "style": {
            "strokeDasharray": "6 3",
            "strokeWidth": 2,
            "stroke": "#222"
          },
          "source": "action-1751334092984",
          "sourceHandle": null,
          "target": "output-1752207809627",
          "targetHandle": null,
          "id": "action-1751334092984-output-1752207809627"
        }
      ]
    }
  }
}